#!/usr/bin/env bash
set -euo pipefail

# Config
IMAGE="mediawiki:1.39"
CONTAINER="steccom-mediawiki"
PORT="8080"
ROOT="$(pwd)"
LS_HOST="${ROOT}/mediawiki/LocalSettings.php"        # —ç—Ç–∞–ª–æ–Ω–Ω—ã–π LocalSettings –∏–∑ —Ä–µ–ø–æ
IMAGES_HOST="${ROOT}/mediawiki_data"                  # –ø–∞–ø–∫–∞ –¥–ª—è –∑–∞–≥—Ä—É–∑–æ–∫
API_URL="http://localhost:8000"                       # FastAPI (–¥–ª—è publish)

usage() {
  cat <<EOF
Usage: $0 <command> [options]

Commands:
  start             –ó–∞–ø—É—Å—Ç–∏—Ç—å MediaWiki –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä (–∫–æ—Ä–Ω–µ–≤—ã–µ –ø—É—Ç–∏, –±–µ–∑ /w)
  stop              –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∏ —É–¥–∞–ª–∏—Ç—å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
  restart           –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä (stop -> start)
  status            –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç—É—Å –∏ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å CSS/–∫–∞—Ä—Ç–∏–Ω–∫–∏
  purge             –û—á–∏—Å—Ç–∏—Ç—å –∫—ç—à Wiki –∏ purge –≥–ª–∞–≤–Ω–æ–π
  publish           –û–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å KB –≤ MediaWiki —á–µ—Ä–µ–∑ FastAPI (–Ω—É–∂–µ–Ω $TOKEN)
                    Options: --user admin --pass Admin123456789 --glob "docs/kb/*.json"

Examples:
  $0 start
  $0 status
  TOKEN="..." $0 publish --user admin --pass Admin123456789 --glob "docs/kb/*.json"
EOF
}

ensure_requirements() {
  command -v docker >/dev/null 2>&1 || { echo "docker not found"; exit 1; }
  mkdir -p "${IMAGES_HOST}"
  if [[ ! -f "${LS_HOST}" ]]; then
    echo "LocalSettings –Ω–µ –Ω–∞–π–¥–µ–Ω: ${LS_HOST}"
    exit 1
  fi
}

start() {
  ensure_requirements
  docker rm -f "${CONTAINER}" >/dev/null 2>&1 || true
  docker run -d \
    --name "${CONTAINER}" \
    -p "${PORT}:80" \
    -v "${IMAGES_HOST}:/var/www/html/images" \
    -v "${LS_HOST}:/var/www/html/LocalSettings.php:ro" \
    --restart unless-stopped \
    "${IMAGE}"

  echo "‚è≥ –ñ–¥—É –ø–æ–¥–Ω—è—Ç–∏–µ —Å–µ—Ä–≤–µ—Ä–∞..."
  sleep 5
  # Purge –≥–ª–∞–≤–Ω–æ–π
  curl -s "http://localhost:${PORT}/index.php?title=–ó–∞–≥–ª–∞–≤–Ω–∞—è_—Å—Ç—Ä–∞–Ω–∏—Ü–∞&action=purge" >/dev/null || true
  status
}

stop() {
  docker rm -f "${CONTAINER}" >/dev/null 2>&1 || true
  echo "üõë ${CONTAINER} –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
}

restart() {
  stop
  start
}

purge() {
  # –û—á–∏—Å—Ç–∫–∞ –∫—ç—à–∞ –∏ purge –≥–ª–∞–≤–Ω–æ–π
  docker exec "${CONTAINER}" rm -rf /var/www/html/cache/* >/dev/null 2>&1 || true
  curl -s "http://localhost:${PORT}/index.php?title=–ó–∞–≥–ª–∞–≤–Ω–∞—è_—Å—Ç—Ä–∞–Ω–∏—Ü–∞&action=purge" >/dev/null || true
  echo "‚úÖ –ö—ç—à –æ—á–∏—â–µ–Ω, –≥–ª–∞–≤–Ω–∞—è –æ–±–Ω–æ–≤–ª–µ–Ω–∞"
}

status() {
  echo "üê≥ –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã:"
  docker ps --filter "name=${CONTAINER}"
  echo
  echo "üîé –ü—Ä–æ–≤–µ—Ä–∫–∞ CSS (–æ–∂–∏–¥–∞–µ—Ç—Å—è Content-Type: text/css)"
  curl -I "http://localhost:${PORT}/load.php?lang=ru&modules=skins.vector.styles.legacy&only=styles&skin=vector" | sed -n '1,10p' || true
  echo
  echo "üñº  –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–∞—Ä—Ç–∏–Ω–∫–∏ (–æ–∂–∏–¥–∞–µ—Ç—Å—è image/png)"
  curl -I "http://localhost:${PORT}/resources/assets/poweredby_mediawiki_88x31.png" | sed -n '1,10p' || true
  echo
  echo "üåê –û—Ç–∫—Ä–æ–π—Ç–µ –≤ –±—Ä–∞—É–∑–µ—Ä–µ: http://localhost:${PORT}/"
}

publish() {
  # Args
  local USER="admin"
  local PASS="Admin123456789"
  local GLOB="docs/kb/*.json"

  while [[ $# -gt 0 ]]; do
    case "$1" in
      --user) USER="$2"; shift 2 ;;
      --pass) PASS="$2"; shift 2 ;;
      --glob) GLOB="$2"; shift 2 ;;
      *) echo "Unknown option: $1"; usage; exit 1 ;;
    esac
  done

  if [[ -z "${TOKEN:-}" ]]; then
    echo "ERROR: TOKEN env is required. Example:"
    echo '  TOKEN="..." '$0' publish --user admin --pass Admin123456789 --glob "docs/kb/*.json"'
    exit 1
  fi

  echo "üì§ –ü—É–±–ª–∏–∫–∞—Ü–∏—è KB ‚Üí MediaWiki —á–µ—Ä–µ–∑ FastAPI..."
  curl -s -X POST "${API_URL}/wiki/publish" \
    -H "Authorization: Bearer ${TOKEN}" \
    -H "Content-Type: application/json" \
    -d "{\"wiki_url\":\"http://localhost:${PORT}/w/api.php\",\"username\":\"${USER}\",\"password\":\"${PASS}\",\"kb_glob\":\"${GLOB}\"}" | jq . || true
}

cmd="${1:-}"
shift || true

case "${cmd}" in
  start)   start ;;
  stop)    stop ;;
  restart) restart ;;
  status)  status ;;
  purge)   purge ;;
  publish) publish "$@" ;;
  ""|help|-h|--help) usage ;;
  *) echo "Unknown command: ${cmd}"; usage; exit 1 ;;
esac

#!/usr/bin/env bash
set -euo pipefail

# Config
IMAGE="mediawiki:1.39"
CONTAINER="steccom-mediawiki"
PORT="8080"
ROOT="$(pwd)"
LS_HOST="${ROOT}/mediawiki/LocalSettings.php"        # —ç—Ç–∞–ª–æ–Ω–Ω—ã–π LocalSettings –∏–∑ —Ä–µ–ø–æ
IMAGES_HOST="${ROOT}/mediawiki_data"                  # –ø–∞–ø–∫–∞ –¥–ª—è –∑–∞–≥—Ä—É–∑–æ–∫
API_URL="http://localhost:8000"                       # FastAPI (–¥–ª—è publish)

usage() {
  cat <<EOF
Usage: $0 <command> [options]

Commands:
  start             –ó–∞–ø—É—Å—Ç–∏—Ç—å MediaWiki –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä (–∫–æ—Ä–Ω–µ–≤—ã–µ –ø—É—Ç–∏, –±–µ–∑ /w)
  stop              –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∏ —É–¥–∞–ª–∏—Ç—å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
  restart           –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä (stop -> start)
  status            –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç—É—Å –∏ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å CSS/–∫–∞—Ä—Ç–∏–Ω–∫–∏
  purge             –û—á–∏—Å—Ç–∏—Ç—å –∫—ç—à Wiki –∏ purge –≥–ª–∞–≤–Ω–æ–π
  publish           –û–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å KB –≤ MediaWiki —á–µ—Ä–µ–∑ FastAPI (–Ω—É–∂–µ–Ω \$TOKEN)
                    Options: --user admin --pass Admin123456789 --glob "docs/kb/*.json"

Examples:
  $0 start
  $0 status
  TOKEN="..." $0 publish --user admin --pass Admin123456789 --glob "docs/kb/*.json"
EOF
}

ensure_requirements() {
  command -v docker >/dev/null 2>&1 || { echo "docker not found"; exit 1; }
  mkdir -p "${IMAGES_HOST}"
  if [[ ! -f "${LS_HOST}" ]]; then
    echo "LocalSettings –Ω–µ –Ω–∞–π–¥–µ–Ω: ${LS_HOST}"
    exit 1
  fi
}

start() {
  ensure_requirements
  docker rm -f "${CONTAINER}" >/dev/null 2>&1 || true
  docker run -d \
    --name "${CONTAINER}" \
    -p "${PORT}:80" \
    -v "${IMAGES_HOST}:/var/www/html/images" \
    -v "${LS_HOST}:/var/www/html/LocalSettings.php:ro" \
    --restart unless-stopped \
    "${IMAGE}"

  echo "‚è≥ –ñ–¥—É –ø–æ–¥–Ω—è—Ç–∏–µ —Å–µ—Ä–≤–µ—Ä–∞..."
  sleep 5
  # Purge –≥–ª–∞–≤–Ω–æ–π
  curl -s "http://localhost:${PORT}/index.php?title=–ó–∞–≥–ª–∞–≤–Ω–∞—è_—Å—Ç—Ä–∞–Ω–∏—Ü–∞&action=purge" >/dev/null || true
  status
}

stop() {
  docker rm -f "${CONTAINER}" >/dev/null 2>&1 || true
  echo "üõë ${CONTAINER} –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
}

restart() {
  stop
  start
}

purge() {
  # –û—á–∏—Å—Ç–∫–∞ –∫—ç—à–∞ –∏ purge –≥–ª–∞–≤–Ω–æ–π
  docker exec "${CONTAINER}" rm -rf /var/www/html/cache/* >/dev/null 2>&1 || true
  curl -s "http://localhost:${PORT}/index.php?title=–ó–∞–≥–ª–∞–≤–Ω–∞—è_—Å—Ç—Ä–∞–Ω–∏—Ü–∞&action=purge" >/dev/null || true
  echo "‚úÖ –ö—ç—à –æ—á–∏—â–µ–Ω, –≥–ª–∞–≤–Ω–∞—è –æ–±–Ω–æ–≤–ª–µ–Ω–∞"
}

status() {
  echo "üê≥ –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã:"
  docker ps --filter "name=${CONTAINER}"
  echo
  echo "üîé –ü—Ä–æ–≤–µ—Ä–∫–∞ CSS (–æ–∂–∏–¥–∞–µ—Ç—Å—è Content-Type: text/css)"
  curl -I "http://localhost:${PORT}/load.php?lang=ru&modules=skins.vector.styles.legacy&only=styles&skin=vector" | sed -n '1,10p' || true
  echo
  echo "üñº  –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–∞—Ä—Ç–∏–Ω–∫–∏ (–æ–∂–∏–¥–∞–µ—Ç—Å—è image/png)"
  curl -I "http://localhost:${PORT}/resources/assets/poweredby_mediawiki_88x31.png" | sed -n '1,10p' || true
  echo
  echo "üåê –û—Ç–∫—Ä–æ–π—Ç–µ –≤ –±—Ä–∞—É–∑–µ—Ä–µ: http://localhost:${PORT}/"
}

publish() {
  # Args
  local USER="admin"
  local PASS="Admin123456789"
  local GLOB="docs/kb/*.json"

  while [[ $# -gt 0 ]]; do
    case "$1" in
      --user) USER="$2"; shift 2 ;;
      --pass) PASS="$2"; shift 2 ;;
      --glob) GLOB="$2"; shift 2 ;;
      *) echo "Unknown option: $1"; usage; exit 1 ;;
    esac
  done

  if [[ -z "${TOKEN:-}" ]]; then
    echo "ERROR: TOKEN env is required. Example:"
    echo '  TOKEN="..." '"$0"' publish --user admin --pass Admin123456789 --glob "docs/kb/*.json"'
    exit 1
  fi

  echo "üì§ –ü—É–±–ª–∏–∫–∞—Ü–∏—è KB ‚Üí MediaWiki —á–µ—Ä–µ–∑ FastAPI..."
  curl -s -X POST "${API_URL}/wiki/publish" \
    -H "Authorization: Bearer ${TOKEN}" \
    -H "Content-Type: application/json" \
    -d "{\"wiki_url\":\"http://localhost:${PORT}/w/api.php\",\"username\":\"${USER}\",\"password\":\"${PASS}\",\"kb_glob\":\"${GLOB}\"}" | jq . || true
}

cmd="${1:-}"
shift || true

case "${cmd}" in
  start)   start ;;
  stop)    stop ;;
  restart) restart ;;
  status)  status ;;
  purge)   purge ;;
  publish) publish "$@" ;;
  ""|help|-h|--help) usage ;;
  *) echo "Unknown command: ${cmd}"; usage; exit 1 ;;
esac
