#!/usr/bin/env python3
"""
Test RAG Status - Check RAG system status in the interface
–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ RAG —Å–∏—Å—Ç–µ–º—ã –≤ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–µ
"""

import sys
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –º–æ–¥—É–ª—è–º
sys.path.append(str(Path(__file__).parent / "kb_admin"))

def test_rag_status():
    """–ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å RAG —Å–∏—Å—Ç–µ–º—ã"""
    
    try:
        from modules.rag.multi_kb_rag import MultiKBRAG
        
        print("üîÑ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è RAG —Å–∏—Å—Ç–µ–º—ã...")
        rag = MultiKBRAG()
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å
        print(f"üìä –í–µ–∫—Ç–æ—Ä–Ω—ã–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–∞: {len(rag.vectorstores)}")
        print(f"üìä –ú–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ: {len(rag.kb_metadata)}")
        
        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –∫–∞–∫ –≤ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–µ
        rag_status = "üü¢ –ê–∫—Ç–∏–≤–Ω–∞" if hasattr(rag, 'vectorstores') and len(rag.vectorstores) > 0 else "üî¥ –ù–µ–∞–∫—Ç–∏–≤–Ω–∞"
        print(f"üìä –°—Ç–∞—Ç—É—Å RAG —Å–∏—Å—Ç–µ–º—ã: {rag_status}")
        
        if rag.vectorstores:
            print("‚úÖ RAG —Å–∏—Å—Ç–µ–º–∞ –∞–∫—Ç–∏–≤–Ω–∞!")
            for kb_id, vectorstore in rag.vectorstores.items():
                print(f"   - KB {kb_id}: {type(vectorstore)}")
        else:
            print("‚ùå RAG —Å–∏—Å—Ç–µ–º–∞ –Ω–µ–∞–∫—Ç–∏–≤–Ω–∞!")
            
            # –ü—ã—Ç–∞–µ–º—Å—è –∑–∞–≥—Ä—É–∑–∏—Ç—å –±–∞–∑—ã –∑–Ω–∞–Ω–∏–π
            print("üîÑ –ü–æ–ø—ã—Ç–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –±–∞–∑ –∑–Ω–∞–Ω–∏–π...")
            loaded_count = rag.load_all_active_kbs()
            print(f"üìä –ó–∞–≥—Ä—É–∂–µ–Ω–æ: {loaded_count}")
            
            if loaded_count > 0:
                print("‚úÖ –ë–∞–∑—ã –∑–Ω–∞–Ω–∏–π –∑–∞–≥—Ä—É–∂–µ–Ω—ã!")
                rag_status = "üü¢ –ê–∫—Ç–∏–≤–Ω–∞" if len(rag.vectorstores) > 0 else "üî¥ –ù–µ–∞–∫—Ç–∏–≤–Ω–∞"
                print(f"üìä –ù–æ–≤—ã–π —Å—Ç–∞—Ç—É—Å: {rag_status}")
        
        return len(rag.vectorstores) > 0
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        import traceback
        traceback.print_exc()
        return False

if __name__ == "__main__":
    success = test_rag_status()
    if success:
        print("‚úÖ RAG —Å–∏—Å—Ç–µ–º–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç!")
    else:
        print("‚ùå RAG —Å–∏—Å—Ç–µ–º–∞ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç!")












