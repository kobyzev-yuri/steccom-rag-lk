#!/bin/bash
# –°–∫—Ä–∏–ø—Ç –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ LLaVA –≤ Ollama

echo "üöÄ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ LLaVA –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π..."

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ Ollama –∑–∞–ø—É—â–µ–Ω
if ! curl -s http://localhost:11434/api/tags > /dev/null; then
    echo "‚ùå Ollama –Ω–µ –∑–∞–ø—É—â–µ–Ω. –ó–∞–ø—É—Å—Ç–∏—Ç–µ Ollama: ollama serve"
    exit 1
fi

echo "‚úÖ Ollama –∑–∞–ø—É—â–µ–Ω"

# –°–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –º–æ–¥–µ–ª–µ–π LLaVA
LLAVA_MODELS=(
    "llava-phi3:latest"
    "llava:7b"
    "llava:13b" 
    "llava:34b"
    "llava:7b-v1.6"
    "llava:13b-v1.6"
    "llava:34b-v1.6"
)

echo "üìã –î–æ—Å—Ç—É–ø–Ω—ã–µ –º–æ–¥–µ–ª–∏ LLaVA:"
for i in "${!LLAVA_MODELS[@]}"; do
    echo "  $((i+1)). ${LLAVA_MODELS[$i]}"
done

# –í—ã–±–æ—Ä –º–æ–¥–µ–ª–∏
echo ""
read -p "–í—ã–±–µ—Ä–∏—Ç–µ –º–æ–¥–µ–ª—å LLaVA (1-${#LLAVA_MODELS[@]}) –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ Enter –¥–ª—è llava-phi3:latest: " choice

if [[ -z "$choice" ]]; then
    selected_model="llava-phi3:latest"
else
    if [[ "$choice" -ge 1 && "$choice" -le "${#LLAVA_MODELS[@]}" ]]; then
        selected_model="${LLAVA_MODELS[$((choice-1))]}"
    else
        echo "‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä. –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è llava-phi3:latest"
        selected_model="llava-phi3:latest"
    fi
fi

echo "üì• –ó–∞–≥—Ä—É–∂–∞–µ–º –º–æ–¥–µ–ª—å: $selected_model"
echo "‚è≥ –≠—Ç–æ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ –º–∏–Ω—É—Ç..."

# –ó–∞–≥—Ä—É–∂–∞–µ–º –º–æ–¥–µ–ª—å
if ollama pull "$selected_model"; then
    echo "‚úÖ –ú–æ–¥–µ–ª—å $selected_model —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω–∞"
else
    echo "‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –º–æ–¥–µ–ª–∏ $selected_model"
    exit 1
fi

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –º–æ–¥–µ–ª—å –¥–æ—Å—Ç—É–ø–Ω–∞
echo "üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å –º–æ–¥–µ–ª–∏..."
if curl -s http://localhost:11434/api/tags | grep -q "$selected_model"; then
    echo "‚úÖ –ú–æ–¥–µ–ª—å $selected_model –¥–æ—Å—Ç—É–ø–Ω–∞"
else
    echo "‚ùå –ú–æ–¥–µ–ª—å $selected_model –Ω–µ –Ω–∞–π–¥–µ–Ω–∞"
    exit 1
fi

# –¢–µ—Å—Ç–∏—Ä—É–µ–º –º–æ–¥–µ–ª—å
echo "üß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º –º–æ–¥–µ–ª—å..."
test_response=$(curl -s -X POST http://localhost:11434/api/generate \
    -H "Content-Type: application/json" \
    -d '{
        "model": "'$selected_model'",
        "prompt": "–ü—Ä–∏–≤–µ—Ç! –ú–æ–∂–µ—à—å –ª–∏ —Ç—ã –∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è?",
        "stream": false
    }' | jq -r '.response' 2>/dev/null)

if [[ -n "$test_response" ]]; then
    echo "‚úÖ –ú–æ–¥–µ–ª—å –æ—Ç–≤–µ—á–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ"
    echo "üìù –û—Ç–≤–µ—Ç –º–æ–¥–µ–ª–∏: $test_response"
else
    echo "‚ö†Ô∏è –ú–æ–¥–µ–ª—å –∑–∞–≥—Ä—É–∂–µ–Ω–∞, –Ω–æ —Ç–µ—Å—Ç –Ω–µ –ø—Ä–æ—à–µ–ª"
fi

echo ""
echo "üéâ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ LLaVA –∑–∞–≤–µ—Ä—à–µ–Ω–∞!"
echo "üìã –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:"
echo "   –ú–æ–¥–µ–ª—å: $selected_model"
echo "   API: http://localhost:11434"
echo "   –°—Ç–∞—Ç—É—Å: –ì–æ—Ç–æ–≤–∞ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é"
echo ""
echo "üí° –¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ:"
echo "   1. –ê–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ KB Admin"
echo "   2. –ò–∑–≤–ª–µ–∫–∞—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏–∑ PDF"
echo "   3. –ü–æ–ª—É—á–∞—Ç—å –æ–ø–∏—Å–∞–Ω–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π —Å –ø–æ–º–æ—â—å—é LLaVA"
echo ""
echo "üîß –î–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –º–æ–¥–µ–ª–∏ –æ—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä—É–π—Ç–µ:"
echo "   kb_admin/modules/core/llava_analyzer.py"
echo "   –°—Ç—Ä–æ–∫–∞: self.model_name = \"$selected_model\""
