#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –Ω–æ–≤—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π KB Admin
"""

import requests
import time
import sys
from pathlib import Path

def test_kb_admin_accessibility():
    """–¢–µ—Å—Ç –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ KB Admin"""
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ KB Admin")
    print("=" * 50)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å
    try:
        response = requests.get("http://localhost:8502", timeout=10)
        if response.status_code == 200:
            print("‚úÖ KB Admin –¥–æ—Å—Ç—É–ø–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É 8502")
        else:
            print(f"‚ùå KB Admin –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω: {response.status_code}")
            return False
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ KB Admin: {e}")
        return False
    
    return True

def test_mediawiki_integration():
    """–¢–µ—Å—Ç –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ MediaWiki"""
    print("\nüì§ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ MediaWiki")
    print("-" * 40)
    
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –º–æ–¥—É–ª–µ–π MediaWiki
        sys.path.append(str(Path(__file__).parent))
        from modules.integrations.mediawiki_client import MediaWikiClient, KBToWikiPublisher
        
        print("‚úÖ MediaWiki –º–æ–¥—É–ª–∏ –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω—ã —É—Å–ø–µ—à–Ω–æ")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ –∫–ª–∏–µ–Ω—Ç–∞
        client = MediaWikiClient("http://localhost:8080/api.php", "admin", "password")
        print("‚úÖ MediaWikiClient —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ –ø—É–±–ª–∏–∫–∞—Ç–æ—Ä–∞
        publisher = KBToWikiPublisher(client)
        print("‚úÖ KBToWikiPublisher —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ")
        
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ MediaWiki –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏: {e}")
        return False

def test_kb_admin_modules():
    """–¢–µ—Å—Ç –º–æ–¥—É–ª–µ–π KB Admin"""
    print("\nüîß –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –º–æ–¥—É–ª–µ–π KB Admin")
    print("-" * 40)
    
    try:
        sys.path.append(str(Path(__file__).parent))
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ –º–æ–¥—É–ª–∏
        from kb_admin.modules.core.knowledge_manager import KnowledgeBaseManager
        from kb_admin.modules.core.text_analyzer import TextAnalyzer
        from kb_admin.modules.core.chunk_optimizer import ChunkOptimizer
        from kb_admin.modules.testing.kb_test_protocol import KBTestProtocol
        
        print("‚úÖ –û—Å–Ω–æ–≤–Ω—ã–µ –º–æ–¥—É–ª–∏ KB Admin –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω—ã")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ —ç–∫–∑–µ–º–ø–ª—è—Ä–æ–≤
        kb_manager = KnowledgeBaseManager()
        text_analyzer = TextAnalyzer()
        chunk_optimizer = ChunkOptimizer()
        test_protocol = KBTestProtocol()
        
        print("‚úÖ –≠–∫–∑–µ–º–ø–ª—è—Ä—ã –º–æ–¥—É–ª–µ–π —Å–æ–∑–¥–∞–Ω—ã —É—Å–ø–µ—à–Ω–æ")
        
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –º–æ–¥—É–ª–µ–π KB Admin: {e}")
        return False

def test_shared_modules():
    """–¢–µ—Å—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –æ–±—â–∏—Ö –º–æ–¥—É–ª–µ–π"""
    print("\nü§ù –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ–±—â–∏—Ö –º–æ–¥—É–ª–µ–π")
    print("-" * 40)
    
    try:
        sys.path.append(str(Path(__file__).parent))
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏–º–ø–æ—Ä—Ç –æ–±—â–∏—Ö –º–æ–¥—É–ª–µ–π –∏–∑ KB Admin
        from modules.rag.multi_kb_rag import MultiKBRAG
        from modules.integrations.mediawiki_client import MediaWikiClient
        from modules.documents.pdf_processor import PDFProcessor
        
        print("‚úÖ –û–±—â–∏–µ –º–æ–¥—É–ª–∏ –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω—ã –∏–∑ KB Admin")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–∑–¥–∞–Ω–∏–µ —ç–∫–∑–µ–º–ø–ª—è—Ä–æ–≤
        rag = MultiKBRAG()
        client = MediaWikiClient("http://localhost:8080/api.php", "admin", "password")
        pdf_processor = PDFProcessor("data/uploads")
        
        print("‚úÖ –≠–∫–∑–µ–º–ø–ª—è—Ä—ã –æ–±—â–∏—Ö –º–æ–¥—É–ª–µ–π —Å–æ–∑–¥–∞–Ω—ã —É—Å–ø–µ—à–Ω–æ")
        
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –æ–±—â–∏—Ö –º–æ–¥—É–ª–µ–π: {e}")
        return False

def test_kb_admin_documentation():
    """–¢–µ—Å—Ç –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏ KB Admin"""
    print("\nüìö –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏ KB Admin")
    print("-" * 40)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ README
    readme_path = Path("kb_admin/README.md")
    if readme_path.exists():
        print("‚úÖ README.md KB Admin –Ω–∞–π–¥–µ–Ω")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ
        content = readme_path.read_text(encoding='utf-8')
        if "KB Admin" in content and "–±–∞–∑–∞–º–∏ –∑–Ω–∞–Ω–∏–π" in content:
            print("‚úÖ –°–æ–¥–µ—Ä–∂–∏–º–æ–µ README –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
        else:
            print("‚ùå –°–æ–¥–µ—Ä–∂–∏–º–æ–µ README –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
            return False
    else:
        print("‚ùå README.md KB Admin –Ω–µ –Ω–∞–π–¥–µ–Ω")
        return False
    
    return True

def test_wiki_publishing_page():
    """–¢–µ—Å—Ç —Å—Ç—Ä–∞–Ω–∏—Ü—ã –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –≤ Wiki"""
    print("\nüì§ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –≤ Wiki")
    print("-" * 50)
    
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ (—ç—Ç–æ –±—É–¥–µ—Ç HTML –æ—Ç–≤–µ—Ç)
        response = requests.get("http://localhost:8502", timeout=10)
        if response.status_code == 200:
            print("‚úÖ –°—Ç—Ä–∞–Ω–∏—Ü–∞ KB Admin –∑–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –≤ HTML –µ—Å—Ç—å —É–ø–æ–º–∏–Ω–∞–Ω–∏—è –æ Wiki (–±–∞–∑–æ–≤–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞)
            html_content = response.text
            if "streamlit" in html_content.lower():
                print("‚úÖ Streamlit –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –∑–∞–≥—Ä—É–∂–µ–Ω")
            else:
                print("‚ö†Ô∏è Streamlit –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –º–æ–∂–µ—Ç –±—ã—Ç—å –Ω–µ –ø–æ–ª–Ω–æ—Å—Ç—å—é –∑–∞–≥—Ä—É–∂–µ–Ω")
        else:
            print(f"‚ùå –°—Ç—Ä–∞–Ω–∏—Ü–∞ KB Admin –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞: {response.status_code}")
            return False
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã: {e}")
        return False
    
    return True

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    print("üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è KB Admin")
    print("=" * 60)
    
    tests = [
        ("–î–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å KB Admin", test_kb_admin_accessibility),
        ("–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è MediaWiki", test_mediawiki_integration),
        ("–ú–æ–¥—É–ª–∏ KB Admin", test_kb_admin_modules),
        ("–û–±—â–∏–µ –º–æ–¥—É–ª–∏", test_shared_modules),
        ("–î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è KB Admin", test_kb_admin_documentation),
        ("–°—Ç—Ä–∞–Ω–∏—Ü–∞ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –≤ Wiki", test_wiki_publishing_page)
    ]
    
    results = []
    for test_name, test_func in tests:
        try:
            result = test_func()
            results.append((test_name, result))
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –≤ —Ç–µ—Å—Ç–µ '{test_name}': {e}")
            results.append((test_name, False))
    
    # –ò—Ç–æ–≥–∏
    print("\n" + "=" * 60)
    print("üìä –†–ï–ó–£–õ–¨–¢–ê–¢–´ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø KB ADMIN")
    print("=" * 60)
    
    passed = 0
    total = len(results)
    
    for test_name, result in results:
        status = "‚úÖ –ü–†–û–ô–î–ï–ù" if result else "‚ùå –ü–†–û–í–ê–õ–ï–ù"
        print(f"{test_name}: {status}")
        if result:
            passed += 1
    
    print(f"\n–ò—Ç–æ–≥–æ: {passed}/{total} —Ç–µ—Å—Ç–æ–≤ –ø—Ä–æ–π–¥–µ–Ω–æ")
    
    if passed == total:
        print("üéâ –í—Å–µ —Ç–µ—Å—Ç—ã KB Admin –ø—Ä–æ–π–¥–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!")
        return True
    else:
        print("‚ö†Ô∏è –ù–µ–∫–æ—Ç–æ—Ä—ã–µ —Ç–µ—Å—Ç—ã KB Admin –ø—Ä–æ–≤–∞–ª–µ–Ω—ã")
        return False

if __name__ == "__main__":
    success = main()
    sys.exit(0 if success else 1)
