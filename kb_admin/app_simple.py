#!/usr/bin/env python3
"""
–£–ø—Ä–æ—â–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è KB Admin –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
"""

import streamlit as st
import os
import sys
from pathlib import Path
import logging

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    level=logging.INFO,
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    handlers=[
        logging.FileHandler('kb_admin.log'),
        logging.StreamHandler()
    ]
)

logger = logging.getLogger(__name__)

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø—É—Ç–µ–π
current_dir = Path(__file__).parent
sys.path.insert(0, str(current_dir))
sys.path.insert(0, str(current_dir / "modules"))

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"""
    try:
        logger.info("–ó–∞–ø—É—Å–∫ KB Admin...")
        
        # –ü—Ä–æ—Å—Ç–æ–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –±–µ–∑ —Å–ª–æ–∂–Ω—ã—Ö –∏–º–ø–æ—Ä—Ç–æ–≤
        st.set_page_config(
            page_title="KB Admin - –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –±–∞–∑–∞–º–∏ –∑–Ω–∞–Ω–∏–π",
            page_icon="üß†",
            layout="wide",
            initial_sidebar_state="expanded"
        )
        
        # –ó–∞–≥–æ–ª–æ–≤–æ–∫
        st.title("üß† KB Admin - –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –±–∞–∑–∞–º–∏ –∑–Ω–∞–Ω–∏–π")
        st.markdown("---")
        
        # –ü—Ä–æ—Å—Ç–æ–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
        st.header("üìä –°—Ç–∞—Ç—É—Å —Å–∏—Å—Ç–µ–º—ã")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º RAG —Å–∏—Å—Ç–µ–º—É
        try:
            from modules.rag.multi_kb_rag import MultiKBRAG
            rag = MultiKBRAG()
            
            col1, col2, col3 = st.columns(3)
            
            with col1:
                st.metric(
                    label="–ë–∞–∑—ã –∑–Ω–∞–Ω–∏–π",
                    value=len(rag.kb_metadata),
                    delta=None
                )
            
            with col2:
                st.metric(
                    label="–í–µ–∫—Ç–æ—Ä–Ω—ã–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–∞",
                    value=len(rag.vectorstores),
                    delta=None
                )
            
            with col3:
                rag_status = "üü¢ –ê–∫—Ç–∏–≤–Ω–∞" if len(rag.vectorstores) > 0 else "üî¥ –ù–µ–∞–∫—Ç–∏–≤–Ω–∞"
                st.metric(
                    label="RAG —Å–∏—Å—Ç–µ–º–∞",
                    value=rag_status,
                    delta=None
                )
            
            # –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–∏—Å–∫
            st.markdown("---")
            st.header("üîç –¢–µ—Å—Ç –ø–æ–∏—Å–∫–∞")
            
            query = st.text_input("–í–≤–µ–¥–∏—Ç–µ –∑–∞–ø—Ä–æ—Å –¥–ª—è –ø–æ–∏—Å–∫–∞:", value="—Å–ø—É—Ç–Ω–∏–∫–æ–≤–∞—è —Å–≤—è–∑—å")
            
            if st.button("–ü–æ–∏—Å–∫"):
                try:
                    results = rag.search_across_kbs(query, k=3)
                    st.success(f"–ù–∞–π–¥–µ–Ω–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤: {len(results)}")
                    
                    for i, doc in enumerate(results[:3]):
                        with st.expander(f"–†–µ–∑—É–ª—å—Ç–∞—Ç {i+1}: {doc.metadata.get('title', '–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è')}"):
                            st.write(f"**–ò—Å—Ç–æ—á–Ω–∏–∫:** {doc.metadata.get('source', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ')}")
                            st.write(f"**–ö–∞—Ç–µ–≥–æ—Ä–∏—è:** {doc.metadata.get('category', '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ')}")
                            st.write("**–°–æ–¥–µ—Ä–∂–∏–º–æ–µ:**")
                            st.write(doc.page_content[:500] + "..." if len(doc.page_content) > 500 else doc.page_content)
                
                except Exception as e:
                    st.error(f"–û—à–∏–±–∫–∞ –ø–æ–∏—Å–∫–∞: {e}")
            
            # –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–∞–∑–∞—Ö –∑–Ω–∞–Ω–∏–π
            st.markdown("---")
            st.header("üìö –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–∞–∑–∞—Ö –∑–Ω–∞–Ω–∏–π")
            
            for kb_id, metadata in rag.kb_metadata.items():
                with st.expander(f"KB {kb_id}: {metadata['name']}"):
                    st.write(f"**–û–ø–∏—Å–∞–Ω–∏–µ:** {metadata['description']}")
                    st.write(f"**–ö–∞—Ç–µ–≥–æ—Ä–∏—è:** {metadata['category']}")
                    st.write(f"**–î–æ–∫—É–º–µ–Ω—Ç–æ–≤:** {metadata['doc_count']}")
                    st.write(f"**–ß–∞–Ω–∫–æ–≤:** {metadata['chunk_count']}")
        
        except Exception as e:
            st.error(f"–û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ RAG —Å–∏—Å—Ç–µ–º—ã: {e}")
            logger.error(f"RAG initialization error: {e}")
        
        logger.info("KB Admin —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω")
        
    except Exception as e:
        st.error(f"–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
        logger.error(f"Critical error: {e}")

if __name__ == "__main__":
    main()










