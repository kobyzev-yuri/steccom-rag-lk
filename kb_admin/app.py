#!/usr/bin/env python3
"""
KB Admin - –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –±–∞–∑–∞–º–∏ –∑–Ω–∞–Ω–∏–π
Knowledge Base Administration System

–ì–ª–∞–≤–Ω—ã–π —Ñ–∞–π–ª –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –±–∞–∑–∞–º–∏ –∑–Ω–∞–Ω–∏–π
"""

import streamlit as st
import os
import sys
from pathlib import Path
import logging

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    level=logging.INFO,
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    handlers=[
        logging.FileHandler('kb_admin.log'),
        logging.StreamHandler()
    ]
)

logger = logging.getLogger(__name__)

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –º–æ–¥—É–ª—è–º
current_dir = Path(__file__).parent
sys.path.append(str(current_dir))

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"""
    try:
        logger.info("–ó–∞–ø—É—Å–∫ KB Admin...")
        
        # –ò–º–ø–æ—Ä—Ç –≥–ª–∞–≤–Ω–æ–≥–æ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
        from modules.ui.main_interface import KBAdminInterface
        
        # –°–æ–∑–¥–∞–Ω–∏–µ –∏ –∑–∞–ø—É—Å–∫ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
        interface = KBAdminInterface()
        interface.render_main_page()
        
        logger.info("KB Admin —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω")
        
    except ImportError as e:
        st.error(f"–û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ –º–æ–¥—É–ª–µ–π: {e}")
        logger.error(f"Import error: {e}")
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø—Ä–æ–±–ª–µ–º–µ
        st.markdown("""
        ## üîß –£—Å—Ç—Ä–∞–Ω–µ–Ω–∏–µ –Ω–µ–ø–æ–ª–∞–¥–æ–∫
        
        –ï—Å–ª–∏ –≤—ã –≤–∏–¥–∏—Ç–µ —ç—Ç—É –æ—à–∏–±–∫—É, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ:
        
        1. **–£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã –ª–∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏:**
           ```bash
           pip install -r requirements.txt
           ```
        
        2. **–ü—Ä–∞–≤–∏–ª—å–Ω–æ –ª–∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –ø—Ä–æ–µ–∫—Ç–∞:**
           ```
           kb_admin/
           ‚îú‚îÄ‚îÄ modules/
           ‚îÇ   ‚îú‚îÄ‚îÄ core/
           ‚îÇ   ‚îú‚îÄ‚îÄ ui/
           ‚îÇ   ‚îú‚îÄ‚îÄ testing/
           ‚îÇ   ‚îî‚îÄ‚îÄ ...
           ```
        
        3. **–î–æ—Å—Ç—É–ø–Ω—ã –ª–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ —Ñ–∞–π–ª—ã:**
           - `modules/ui/main_interface.py`
           - `modules/core/kb_manager.py`
           - –ò –¥—Ä—É–≥–∏–µ –º–æ–¥—É–ª–∏
        
        **–î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–º–æ—â–∏ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É —Å–∏—Å—Ç–µ–º—ã.**
        """)
        
    except Exception as e:
        st.error(f"–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
        logger.error(f"Critical error: {e}")
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± –æ—à–∏–±–∫–µ
        st.markdown("""
        ## ‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞
        
        –ü—Ä–æ–∏–∑–æ—à–ª–∞ –Ω–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞:
        
        1. **–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏** –≤ —Ñ–∞–π–ª–µ `kb_admin.log`
        2. **–ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ**
        3. **–û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É** –µ—Å–ª–∏ –ø—Ä–æ–±–ª–µ–º–∞ –ø–æ–≤—Ç–æ—Ä—è–µ—Ç—Å—è
        
        **–î–µ—Ç–∞–ª–∏ –æ—à–∏–±–∫–∏:** `{error}`
        """.format(error=str(e)))

if __name__ == "__main__":
    main()
