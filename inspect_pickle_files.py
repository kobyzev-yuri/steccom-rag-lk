#!/usr/bin/env python3
"""
Inspect Pickle Files - Check what's inside the pickle files
–ü—Ä–æ–≤–µ—Ä–∫–∞ Pickle —Ñ–∞–π–ª–æ–≤ - –ø–æ—Å–º–æ—Ç—Ä–∏–º —á—Ç–æ –≤–Ω—É—Ç—Ä–∏ pickle —Ñ–∞–π–ª–æ–≤
"""

import pickle
from pathlib import Path

def inspect_pickle_files():
    """–ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ pickle —Ñ–∞–π–ª–æ–≤"""
    
    vectorstore_paths = [
        "kb_admin/data/knowledge_bases/vectorstore_1",
        "kb_admin/data/knowledge_bases/vectorstore_2", 
        "kb_admin/data/knowledge_bases/vectorstore_3"
    ]
    
    for vectorstore_path in vectorstore_paths:
        pkl_file = Path(vectorstore_path) / "index.pkl"
        
        if pkl_file.exists():
            print(f"\nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞: {pkl_file}")
            
            try:
                with open(pkl_file, 'rb') as f:
                    data = pickle.load(f)
                
                print(f"   –¢–∏–ø –æ–±—ä–µ–∫—Ç–∞: {type(data)}")
                print(f"   –ê—Ç—Ä–∏–±—É—Ç—ã: {dir(data)}")
                
                if hasattr(data, '__dict__'):
                    print(f"   –°–ª–æ–≤–∞—Ä—å –∞—Ç—Ä–∏–±—É—Ç–æ–≤: {data.__dict__.keys()}")
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞
                file_size = pkl_file.stat().st_size
                print(f"   –†–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞: {file_size} –±–∞–π—Ç")
                
            except Exception as e:
                print(f"   ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ: {e}")
        else:
            print(f"   ‚ö†Ô∏è –§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: {pkl_file}")

if __name__ == "__main__":
    inspect_pickle_files()












