#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è JWT —Ç–æ–∫–µ–Ω–∞ –°–¢–≠–ö–ö–û–ú API
"""

import requests
import json
import sys

def get_token(username, password, api_url="http://localhost:8000"):
    """–ü–æ–ª—É—á–∏—Ç—å JWT —Ç–æ–∫–µ–Ω"""
    try:
        response = requests.post(
            f"{api_url}/auth/login",
            json={"username": username, "password": password}
        )
        
        if response.status_code == 200:
            data = response.json()
            token = data["access_token"]
            user_info = data["user_info"]
            
            print(f"‚úÖ –£—Å–ø–µ—à–Ω–∞—è –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è!")
            print(f"üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {user_info['username']} ({user_info['role']})")
            print(f"üè¢ –ö–æ–º–ø–∞–Ω–∏—è: {user_info['company']}")
            print(f"‚è∞ –¢–æ–∫–µ–Ω –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª–µ–Ω: {data['expires_in']} —Å–µ–∫—É–Ω–¥")
            print(f"\nüîë JWT Token:")
            print(f"{token}")
            
            return token
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏: {response.status_code}")
            print(f"–û—Ç–≤–µ—Ç: {response.text}")
            return None
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: {e}")
        return None

def test_token(token, api_url="http://localhost:8000"):
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å —Ç–æ–∫–µ–Ω"""
    try:
        headers = {"Authorization": f"Bearer {token}"}
        response = requests.get(f"{api_url}/auth/me", headers=headers)
        
        if response.status_code == 200:
            user_info = response.json()
            print(f"\n‚úÖ –¢–æ–∫–µ–Ω —Ä–∞–±–æ—Ç–∞–µ—Ç!")
            print(f"üë§ –¢–µ–∫—É—â–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {user_info['username']}")
            return True
        else:
            print(f"‚ùå –¢–æ–∫–µ–Ω –Ω–µ–¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª–µ–Ω: {response.status_code}")
            return False
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Ç–æ–∫–µ–Ω–∞: {e}")
        return False

if __name__ == "__main__":
    # –î–æ—Å—Ç—É–ø–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏
    users = {
        "staff1": "10176e7b7b24d317acfcf8d2064cfd2f24e154f7b5a96603077d5ef813d6a6b6",
        "arctic_user": "—Ö–µ—à_–ø–∞—Ä–æ–ª—è_arctic",
        "desert_user": "—Ö–µ—à_–ø–∞—Ä–æ–ª—è_desert"
    }
    
    if len(sys.argv) > 1:
        username = sys.argv[1]
        if username in users:
            password = users[username]
        else:
            print(f"‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {username} –Ω–µ –Ω–∞–π–¥–µ–Ω")
            print(f"–î–æ—Å—Ç—É–ø–Ω—ã–µ: {list(users.keys())}")
            sys.exit(1)
    else:
        print("üîê –ü–æ–ª—É—á–µ–Ω–∏–µ JWT —Ç–æ–∫–µ–Ω–∞ –¥–ª—è –°–¢–≠–ö–ö–û–ú API")
        print("\n–î–æ—Å—Ç—É–ø–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏:")
        for i, user in enumerate(users.keys(), 1):
            print(f"  {i}. {user}")
        
        try:
            choice = int(input("\n–í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–Ω–æ–º–µ—Ä): ")) - 1
            username = list(users.keys())[choice]
            password = users[username]
        except (ValueError, IndexError):
            print("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä")
            sys.exit(1)
    
    # –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω
    token = get_token(username, password)
    
    if token:
        # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ç–æ–∫–µ–Ω
        test_token(token)
        
        print(f"\nüìñ –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è API: http://localhost:8000/docs")
        print(f"üîß ReDoc: http://localhost:8000/redoc")
        print(f"\nüí° –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —Ç–æ–∫–µ–Ω–∞:")
        print(f"curl -H 'Authorization: Bearer {token[:50]}...' http://localhost:8000/agreements/current")
